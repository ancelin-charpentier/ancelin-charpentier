import pdfplumber

# Chemin vers le fichier PDF
pdf_path = "path/to/your/pdf-file.pdf"

# Ouvre le fichier PDF
with pdfplumber.open(pdf_path) as pdf:
    # Parcourir chaque page du PDF
    for page_num, page in enumerate(pdf.pages):
        # Affiche la taille de la page (format)
        page_width = page.width
        page_height = page.height
        print(f"Page {page_num + 1} - Format: {page_width} x {page_height}")
        
        # Extraire le texte et les coordonnées de chaque élément
        extracted_text = page.extract_words()  # Extract text with coordinates
        
        # Affiche le texte et ses coordonnées (bounding box)
        for word in extracted_text:
            text = word['text']
            x0, y0, x1, y1 = word['x0'], word['top'], word['x1'], word['bottom']
            print(f"Text: '{text}' | Coordinates: (x0: {x0}, y0: {y0}, x1: {x1}, y1: {y1})")

import tkinter as tk
from tkinter import filedialog

def demander_fichier():
    # Crée une fenêtre Tkinter
    root = tk.Tk()
    root.withdraw()  # Cache la fenêtre principale
    
    # Ouvre une boîte de dialogue pour sélectionner un fichier
    fichier_selectionne = filedialog.askopenfilename(
        title="Sélectionner un fichier",
        filetypes=(("Fichiers PDF", "*.pdf"), ("Tous les fichiers", "*.*"))
    )
    
    return fichier_selectionne

# Appelle la fonction pour demander à l'utilisateur de sélectionner un fichier
chemin_fichier = demander_fichier()

# Affiche le chemin du fichier sélectionné
if chemin_fichier:
    print(f"Fichier sélectionné : {chemin_fichier}")
else:
    print("Aucun fichier sélectionné.")

import pdfplumber

# Chemin vers le fichier PDF
pdf_path = "path/to/your/pdf-file.pdf"

# Définir la région (bounding box) où tu veux rechercher du texte
# Les coordonnées sont en points (1 point = 1/72 inch)
x0, y0, x1, y1 = 100, 100, 400, 500  # Coordonnées de la région (à ajuster selon le PDF)

# Ouvre le fichier PDF
with pdfplumber.open(pdf_path) as pdf:
    for page_num, page in enumerate(pdf.pages):
        # Extraire le texte dans la région définie par la bounding box
        texte_dans_region = page.within_bbox((x0, y0, x1, y1)).extract_text()
        
        print(f"Page {page_num + 1} - Texte dans la région (x0: {x0}, y0: {y0}, x1: {x1}, y1: {y1}):")
        print(texte_dans_region)
        
        # Recherche d'une phrase ou d'un ensemble de mots spécifique dans cette région
        phrase_recherchee = "Votre phrase à rechercher"
        if phrase_recherchee in texte_dans_region:
            print(f"Phrase trouvée à la page {page_num + 1} dans la région définie.")

import pdfplumber

# Chemin vers le fichier PDF
pdf_path = "path/to/your/pdf-file.pdf"

# Dimensions des formats A3 et A1 en points
A3_DIMENSIONS = (841.89, 1190.55)
A1_DIMENSIONS = (1683.78, 2383.94)

# Fonction pour comparer les tailles de page
def check_page_format(width, height):
    if (round(width, 2), round(height, 2)) == A3_DIMENSIONS:
        return "A3"
    elif (round(width, 2), round(height, 2)) == A1_DIMENSIONS:
        return "A1"
    else:
        return "Unknown format"

# Ouvre le fichier PDF
with pdfplumber.open(pdf_path) as pdf:
    for page_num, page in enumerate(pdf.pages):
        # Récupère la taille de la page
        page_width = page.width
        page_height = page.height
        page_format = check_page_format(page_width, page_height)
        
        print(f"Page {page_num + 1} - Format: {page_format} (Size: {page_width} x {page_height} points)")

Sub LancerScriptPythonSimple()

    ' Le chemin de l'exécutable Python
    Dim pythonExec As String
    pythonExec = "python" ' Assumes Python is in the PATH, otherwise give full path
    
    ' Le chemin vers ton script Python
    Dim scriptPath As String
    scriptPath = "C:\chemin\vers\mon_script.py"
    
    ' Lancer le script Python avec Shell
    Shell pythonExec & " " & scriptPath, vbNormalFocus

End Sub
Sub ImportJSONtoExcel()
    Dim jsonFile As String
    Dim jsonData As Object
    Dim dict As Object
    Dim key As Variant
    Dim ws As Worksheet
    Dim i As Long, j As Long

    ' Define the worksheet
    Set ws = ThisWorkbook.Sheets("Sheet1")

    ' Path to your JSON file
    jsonFile = "C:\path\to\yourfile.json"

    ' Read the JSON file content
    jsonFile = ReadTextFile(jsonFile)

    ' Parse the JSON
    Set jsonData = JsonConverter.ParseJson(jsonFile)

    ' Iterate through the keys of the JSON (assuming it's a dictionary)
    i = 1 ' Start at row 1
    For Each key In jsonData.Keys
        ' Write the key in column A
        ws.Cells(i, 1).Value = key
        
        ' Iterate through values (assuming they're arrays/lists)
        j = 2 ' Start at column 2
        For Each item In jsonData(key)
            ws.Cells(i, j).Value = item
            j = j + 1
        Next item
        
        ' Move to the next row
        i = i + 1
    Next key

End Sub

Function ReadTextFile(filePath As String) As String
    Dim fileNumber As Integer
    Dim fileContent As String
    fileNumber = FreeFile
    Open filePath For Input As fileNumber
    fileContent = Input$(LOF(fileNumber), fileNumber)
    Close fileNumber
    ReadTextFile = fileContent
End Function
Sub TestFileAccess()
    Dim jsonFile As String
    jsonFile = "C:\path\to\yourfile.json"
    MsgBox Dir(jsonFile) ' Check if file exists
End Sub
Sub OpenJSONFileWithoutPrompt()
    Dim filePath As String
    Dim fileName As String
    Dim fullPath As String
    Dim fileNumber As Integer
    Dim jsonData As String

    ' Set the name of the JSON file
    fileName = "temp.json"
    
    ' Construct the full path to the JSON file
    fullPath = ThisWorkbook.Path & "\" & fileName
    
    ' Check if the file exists
    If Dir(fullPath) <> "" Then
        ' Open the JSON file for reading
        fileNumber = FreeFile
        Open fullPath For Input As #fileNumber
        
        ' Read the contents of the JSON file
        jsonData = Input$(LOF(fileNumber), fileNumber)
        
        ' Close the file
        Close #fileNumber
        
        ' Display the contents in a message box (optional)
        MsgBox "Contents of " & fileName & ":" & vbCrLf & jsonData
    Else
        MsgBox "The file " & fileName & " does not exist in the same folder as this workbook."
    End If
End Sub